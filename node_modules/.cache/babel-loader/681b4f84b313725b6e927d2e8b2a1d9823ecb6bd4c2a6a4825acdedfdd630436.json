{"ast":null,"code":"/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n/**\n * The base class for all Adobe I/O Core SDK Errors.\n */\nclass AioCoreSDKError extends Error {\n  /**\n   * Constructor.\n   * Do not instantiate directly, subclass this class instead.\n   *\n   * @param {string} [message=<no_message>] The message for the Error\n   * @param {string} [code=<unknown_code>] The code for the Error\n   * @param {string} [sdk=<unknown_sdk>] The SDK associated with the Error\n   * @param {object} [sdkDetails={}] The SDK details associated with the Error\n   * @param {boolean} [captureStackTrace=Error.captureStackTrace] if available, capture the V8 stack trace\n   */\n  constructor(message = '<no_message>', code = '<unknown_code>', sdk = '<unknown_sdk>', sdkDetails = {}, captureStackTrace = Error.captureStackTrace) {\n    super(`[${sdk}:${code}] ${message}`);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (captureStackTrace && captureStackTrace instanceof Function) {\n      captureStackTrace(this, AioCoreSDKError);\n    }\n    this.code = code;\n    this.sdk = sdk;\n    this.sdkDetails = sdkDetails;\n    this.name = this.constructor.name;\n  }\n\n  /**\n   * Returns a JSON respresentation of this Error object.\n   *\n   * @returns {object} this error object as json\n   */\n  toJSON() {\n    return {\n      sdk: this.sdk,\n      sdkDetails: this.sdkDetails,\n      code: this.code,\n      message: this.message,\n      stacktrace: this.stack\n    };\n  }\n}\nmodule.exports = AioCoreSDKError;","map":{"version":3,"names":["AioCoreSDKError","Error","constructor","message","code","sdk","sdkDetails","captureStackTrace","Function","name","toJSON","stacktrace","stack","module","exports"],"sources":["/Users/ynaka/Downloads/summit-2024-l425-ue-z-final-with-events/react-app/node_modules/@adobe/aio-lib-core-errors/src/AioCoreSDKError.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n/**\n * The base class for all Adobe I/O Core SDK Errors.\n */\nclass AioCoreSDKError extends Error {\n  /**\n   * Constructor.\n   * Do not instantiate directly, subclass this class instead.\n   *\n   * @param {string} [message=<no_message>] The message for the Error\n   * @param {string} [code=<unknown_code>] The code for the Error\n   * @param {string} [sdk=<unknown_sdk>] The SDK associated with the Error\n   * @param {object} [sdkDetails={}] The SDK details associated with the Error\n   * @param {boolean} [captureStackTrace=Error.captureStackTrace] if available, capture the V8 stack trace\n   */\n  constructor (\n    message = '<no_message>',\n    code = '<unknown_code>',\n    sdk = '<unknown_sdk>',\n    sdkDetails = {},\n    captureStackTrace = Error.captureStackTrace\n  ) {\n    super(`[${sdk}:${code}] ${message}`)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (captureStackTrace && captureStackTrace instanceof Function) {\n      captureStackTrace(this, AioCoreSDKError)\n    }\n\n    this.code = code\n    this.sdk = sdk\n    this.sdkDetails = sdkDetails\n    this.name = this.constructor.name\n  }\n\n  /**\n   * Returns a JSON respresentation of this Error object.\n   *\n   * @returns {object} this error object as json\n   */\n  toJSON () {\n    return {\n      sdk: this.sdk,\n      sdkDetails: this.sdkDetails,\n      code: this.code,\n      message: this.message,\n      stacktrace: this.stack\n    }\n  }\n}\n\nmodule.exports = AioCoreSDKError\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,eAAe,SAASC,KAAK,CAAC;EAClC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CACTC,OAAO,GAAG,cAAc,EACxBC,IAAI,GAAG,gBAAgB,EACvBC,GAAG,GAAG,eAAe,EACrBC,UAAU,GAAG,CAAC,CAAC,EACfC,iBAAiB,GAAGN,KAAK,CAACM,iBAAiB,EAC3C;IACA,KAAK,CAAE,IAAGF,GAAI,IAAGD,IAAK,KAAID,OAAQ,EAAC,CAAC;;IAEpC;IACA,IAAII,iBAAiB,IAAIA,iBAAiB,YAAYC,QAAQ,EAAE;MAC9DD,iBAAiB,CAAC,IAAI,EAAEP,eAAe,CAAC;IAC1C;IAEA,IAAI,CAACI,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACG,IAAI,GAAG,IAAI,CAACP,WAAW,CAACO,IAAI;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACEC,MAAMA,CAAA,EAAI;IACR,OAAO;MACLL,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BF,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBQ,UAAU,EAAE,IAAI,CAACC;IACnB,CAAC;EACH;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGd,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}