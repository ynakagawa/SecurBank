{"ast":null,"code":"const {\n  ErrorWrapper,\n  createUpdater\n} = require('@adobe/aio-lib-core-errors').AioCoreSDKErrorWrapper;\nconst codes = {};\nconst messages = new Map();\n\n/**\n * Create an Updater for the Error wrapper\n *\n * @ignore\n */\nconst Updater = createUpdater(\n// object that stores the error classes (to be exported)\ncodes,\n// Map that stores the error strings (to be exported)\nmessages);\n\n/**\n * Provides a wrapper to easily create classes of a certain name, and values\n *\n * @ignore\n */\nconst E = ErrorWrapper(\n// The class name for your SDK Error. Your Error objects will be these objects\n'AEMHeadlessError',\n// The name of your SDK. This will be a property in your Error objects\n'AEMHeadless',\n// the object returned from the CreateUpdater call above\nUpdater\n// the base class that your Error class is extending. AioCoreSDKError is the default\n/* , AioCoreSDKError */);\nmodule.exports = {\n  codes,\n  messages\n};\n\n// Commons errors\nE('REQUEST_ERROR', 'General Request error: %s.');\nE('RESPONSE_ERROR', 'There was a problem parsing response data: %s.');\nE('API_ERROR', 'There was a problem with your API call: %s.');\nE('INVALID_PARAM', 'There was a problem with required params: %s.');\n// NodeJS Errors\nE('AUTH_FILE_READ_ERROR', 'There was a problem reading auth file: %s.');\nE('AUTH_FILE_PARSE_ERROR', 'There was a problem parsing auth file: %s.');\nE('EXCHANGE_TOKEN_ERROR', 'There was a problem fetching  exchange token: %s.');","map":{"version":3,"names":["ErrorWrapper","createUpdater","require","AioCoreSDKErrorWrapper","codes","messages","Map","Updater","E","module","exports"],"sources":["/Users/ynaka/Downloads/summit-2024-l425-ue-z-final-with-events/react-app/node_modules/@adobe/aem-headless-client-js/src/utils/SDKErrors.js"],"sourcesContent":["const { ErrorWrapper, createUpdater } = require('@adobe/aio-lib-core-errors').AioCoreSDKErrorWrapper\n\nconst codes = {}\nconst messages = new Map()\n\n/**\n * Create an Updater for the Error wrapper\n *\n * @ignore\n */\nconst Updater = createUpdater(\n  // object that stores the error classes (to be exported)\n  codes,\n  // Map that stores the error strings (to be exported)\n  messages\n)\n\n/**\n * Provides a wrapper to easily create classes of a certain name, and values\n *\n * @ignore\n */\nconst E = ErrorWrapper(\n  // The class name for your SDK Error. Your Error objects will be these objects\n  'AEMHeadlessError',\n  // The name of your SDK. This will be a property in your Error objects\n  'AEMHeadless',\n  // the object returned from the CreateUpdater call above\n  Updater\n  // the base class that your Error class is extending. AioCoreSDKError is the default\n  /* , AioCoreSDKError */\n)\n\nmodule.exports = {\n  codes,\n  messages\n}\n\n// Commons errors\nE('REQUEST_ERROR', 'General Request error: %s.')\nE('RESPONSE_ERROR', 'There was a problem parsing response data: %s.')\nE('API_ERROR', 'There was a problem with your API call: %s.')\nE('INVALID_PARAM', 'There was a problem with required params: %s.')\n// NodeJS Errors\nE('AUTH_FILE_READ_ERROR', 'There was a problem reading auth file: %s.')\nE('AUTH_FILE_PARSE_ERROR', 'There was a problem parsing auth file: %s.')\nE('EXCHANGE_TOKEN_ERROR', 'There was a problem fetching  exchange token: %s.')\n"],"mappings":"AAAA,MAAM;EAAEA,YAAY;EAAEC;AAAc,CAAC,GAAGC,OAAO,CAAC,4BAA4B,CAAC,CAACC,sBAAsB;AAEpG,MAAMC,KAAK,GAAG,CAAC,CAAC;AAChB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGN,aAAa;AAC3B;AACAG,KAAK;AACL;AACAC,QACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,CAAC,GAAGR,YAAY;AACpB;AACA,kBAAkB;AAClB;AACA,aAAa;AACb;AACAO;AACA;AACA,uBACF,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG;EACfN,KAAK;EACLC;AACF,CAAC;;AAED;AACAG,CAAC,CAAC,eAAe,EAAE,4BAA4B,CAAC;AAChDA,CAAC,CAAC,gBAAgB,EAAE,gDAAgD,CAAC;AACrEA,CAAC,CAAC,WAAW,EAAE,6CAA6C,CAAC;AAC7DA,CAAC,CAAC,eAAe,EAAE,+CAA+C,CAAC;AACnE;AACAA,CAAC,CAAC,sBAAsB,EAAE,4CAA4C,CAAC;AACvEA,CAAC,CAAC,uBAAuB,EAAE,4CAA4C,CAAC;AACxEA,CAAC,CAAC,sBAAsB,EAAE,mDAAmD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}