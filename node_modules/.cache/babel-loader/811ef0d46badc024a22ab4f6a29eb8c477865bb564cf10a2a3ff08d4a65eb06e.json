{"ast":null,"code":"const {\n  INVALID_PARAM\n} = require('./SDKErrors').codes;\n\n/**\n * simple string to base64 implementation\n *\n * @private\n * @param {string} str\n */\nconst __str2base64 = str => {\n  if (typeof btoa === 'function') {\n    return btoa(str);\n  } else {\n    return Buffer.from(str, 'utf8').toString('base64');\n  }\n};\n\n/**\n * Returns valid url.\n *\n * @private\n * @param {string} domain\n * @param {string} path\n * @returns {string} valid url\n */\nconst __getUrl = (domain, path) => {\n  return `${domain}${path}`;\n};\n\n/**\n * Removes first / in a path\n *\n * @private\n * @param {string} path\n * @returns {string} path\n */\nconst __getPath = path => {\n  return path[0] === '/' ? path.substring(1) : path;\n};\n\n/**\n * Add last / in domain\n *\n * @private\n * @param {string} domain\n * @returns {string} valid domain\n */\nconst __getDomain = domain => {\n  return domain[domain.length - 1] === '/' ? domain : `${domain}/`;\n};\n\n/**\n * Check valid url or absolute path\n *\n * @private\n * @param {string} url\n * @returns void\n */\nconst __validateUrl = url => {\n  const fullUrl = url[0] === '/' ? `https://domain${url}` : url;\n  try {\n    new URL(fullUrl); // eslint-disable-line\n  } catch (e) {\n    throw new INVALID_PARAM({\n      messageValues: `Invalid URL/path: ${url}`\n    });\n  }\n};\n\n/**\n * get Browser Fetch instance\n *\n * @private\n * @returns {object} fetch instance\n */\nconst __getBrowserFetch = () => {\n  if (typeof window !== 'undefined') {\n    return window.fetch.bind(window);\n  }\n  if (typeof self !== 'undefined') {\n    return self.fetch.bind(self); // eslint-disable-line\n  }\n  return null;\n};\n\n/**\n * get Fetch instance\n *\n * @private\n * @param {object} [fetch]\n * @returns {object} fetch instance\n */\nconst __getFetch = fetch => {\n  if (!fetch) {\n    const browserFetch = __getBrowserFetch();\n    if (!browserFetch) {\n      throw new INVALID_PARAM({\n        messageValues: 'Required param missing: config.fetch'\n      });\n    }\n    return browserFetch;\n  }\n  return fetch;\n};\n\n/**\n * Returns Authorization Header value.\n *\n * @private\n * @param {string|array} auth - Bearer token string or [user,pass] pair array\n * @returns {string} Authorization Header value\n */\nconst __getAuthHeader = auth => {\n  let authType = 'Bearer';\n  let authToken = auth;\n  // If auth is user, password` pair\n  if (Array.isArray(auth) && auth[0] && auth[1]) {\n    authType = 'Basic';\n    authToken = __str2base64(`${auth[0]}:${auth[1]}`);\n  }\n  return `${authType} ${authToken}`;\n};\nmodule.exports = {\n  __getUrl,\n  __getPath,\n  __getDomain,\n  __validateUrl,\n  __getFetch,\n  __getAuthHeader\n};","map":{"version":3,"names":["INVALID_PARAM","require","codes","__str2base64","str","btoa","Buffer","from","toString","__getUrl","domain","path","__getPath","substring","__getDomain","length","__validateUrl","url","fullUrl","URL","e","messageValues","__getBrowserFetch","window","fetch","bind","self","__getFetch","browserFetch","__getAuthHeader","auth","authType","authToken","Array","isArray","module","exports"],"sources":["/Users/ynaka/Downloads/summit-2024-l425-ue-z-final-with-events/react-app/node_modules/@adobe/aem-headless-client-js/src/utils/utils.js"],"sourcesContent":["const { INVALID_PARAM } = require('./SDKErrors').codes\n\n/**\n * simple string to base64 implementation\n *\n * @private\n * @param {string} str\n */\nconst __str2base64 = (str) => {\n  if (typeof btoa === 'function') {\n    return btoa(str)\n  } else {\n    return Buffer.from(str, 'utf8').toString('base64')\n  }\n}\n\n/**\n * Returns valid url.\n *\n * @private\n * @param {string} domain\n * @param {string} path\n * @returns {string} valid url\n */\nconst __getUrl = (domain, path) => {\n  return `${domain}${path}`\n}\n\n/**\n * Removes first / in a path\n *\n * @private\n * @param {string} path\n * @returns {string} path\n */\nconst __getPath = (path) => {\n  return path[0] === '/' ? path.substring(1) : path\n}\n\n/**\n * Add last / in domain\n *\n * @private\n * @param {string} domain\n * @returns {string} valid domain\n */\nconst __getDomain = (domain) => {\n  return domain[domain.length - 1] === '/' ? domain : `${domain}/`\n}\n\n/**\n * Check valid url or absolute path\n *\n * @private\n * @param {string} url\n * @returns void\n */\nconst __validateUrl = (url) => {\n  const fullUrl = url[0] === '/' ? `https://domain${url}` : url\n\n  try {\n    new URL(fullUrl) // eslint-disable-line\n  } catch (e) {\n    throw new INVALID_PARAM({\n      messageValues: `Invalid URL/path: ${url}`\n    })\n  }\n}\n\n/**\n * get Browser Fetch instance\n *\n * @private\n * @returns {object} fetch instance\n */\nconst __getBrowserFetch = () => {\n  if (typeof window !== 'undefined') {\n    return window.fetch.bind(window)\n  }\n\n  if (typeof self !== 'undefined') {\n    return self.fetch.bind(self) // eslint-disable-line\n  }\n\n  return null\n}\n\n/**\n * get Fetch instance\n *\n * @private\n * @param {object} [fetch]\n * @returns {object} fetch instance\n */\nconst __getFetch = (fetch) => {\n  if (!fetch) {\n    const browserFetch = __getBrowserFetch()\n    if (!browserFetch) {\n      throw new INVALID_PARAM({\n        messageValues: 'Required param missing: config.fetch'\n      })\n    }\n\n    return browserFetch\n  }\n\n  return fetch\n}\n\n/**\n * Returns Authorization Header value.\n *\n * @private\n * @param {string|array} auth - Bearer token string or [user,pass] pair array\n * @returns {string} Authorization Header value\n */\nconst __getAuthHeader = (auth) => {\n  let authType = 'Bearer'\n  let authToken = auth\n  // If auth is user, password` pair\n  if (Array.isArray(auth) && auth[0] && auth[1]) {\n    authType = 'Basic'\n    authToken = __str2base64(`${auth[0]}:${auth[1]}`)\n  }\n\n  return `${authType} ${authToken}`\n}\n\nmodule.exports = {\n  __getUrl,\n  __getPath,\n  __getDomain,\n  __validateUrl,\n  __getFetch,\n  __getAuthHeader\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}