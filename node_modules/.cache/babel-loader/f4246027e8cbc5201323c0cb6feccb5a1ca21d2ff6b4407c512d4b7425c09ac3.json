{"ast":null,"code":"var _jsxFileName = \"/Users/ynaka/Downloads/summit-2024-l425-ue-z-final-with-events/react-app/src/components/ServicesSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ServiceCard from \"./ServiceCard\";\nimport SelectorButton from \"./SelectorButton\";\nimport \"./ServicesSection.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesSection = ({\n  slug,\n  cfs\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedCategory, setSelectedCategory] = useState(\"All Services\");\n  const categoriesedServices = useMemo(() => {\n    const map = {\n      \"All Services\": []\n    };\n    cfs.forEach(service => {\n      var _service$serviceCateg;\n      const category = service === null || service === void 0 ? void 0 : (_service$serviceCateg = service.serviceCategory) === null || _service$serviceCateg === void 0 ? void 0 : _service$serviceCateg.name;\n      if (category) {\n        map[category] = map[category] || [];\n        if (service.slug !== slug) {\n          map[category].push(service);\n        } else {\n          setSelectedCategory(category);\n        }\n      }\n      if (service.slug !== slug) {\n        map[\"All Services\"].push(service);\n      }\n    });\n    return map;\n  }, [slug, cfs]);\n  const services = useMemo(() => categoriesedServices[selectedCategory].map((service, index) => /*#__PURE__*/_jsxDEV(ServiceCard, {\n    cf: service,\n    navigate: navigate\n  }, `${service.slug}_${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)), [selectedCategory, categoriesedServices, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grey\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container services-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-wrapper\",\n        children: Object.keys(categoriesedServices).map((category, index) => /*#__PURE__*/_jsxDEV(SelectorButton, {\n          variant: \"dark\",\n          onClick: () => setSelectedCategory(category),\n          isSelected: selectedCategory === category,\n          children: category\n        }, `${category}_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), services]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicesSection, \"exrPjRGJLksCtHhVxwhASgeIvbI=\", false, function () {\n  return [useNavigate];\n});\n_c = ServicesSection;\nexport default ServicesSection;\nvar _c;\n$RefreshReg$(_c, \"ServicesSection\");","map":{"version":3,"names":["React","useState","useMemo","useNavigate","ServiceCard","SelectorButton","jsxDEV","_jsxDEV","ServicesSection","slug","cfs","_s","navigate","selectedCategory","setSelectedCategory","categoriesedServices","map","forEach","service","_service$serviceCateg","category","serviceCategory","name","push","services","index","cf","fileName","_jsxFileName","lineNumber","columnNumber","className","children","Object","keys","variant","onClick","isSelected","_c","$RefreshReg$"],"sources":["/Users/ynaka/Downloads/summit-2024-l425-ue-z-final-with-events/react-app/src/components/ServicesSection.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ServiceCard from \"./ServiceCard\";\nimport SelectorButton from \"./SelectorButton\";\nimport \"./ServicesSection.scss\";\n\nconst ServicesSection = ({ slug, cfs }) => {\n  const navigate = useNavigate();\n  const [selectedCategory, setSelectedCategory] = useState(\"All Services\");\n\n  const categoriesedServices = useMemo(() => {\n    const map = { \"All Services\": [] };\n    cfs.forEach((service) => {\n      const category = service?.serviceCategory?.name;\n      if (category) {\n        map[category] = map[category] || [];\n        if (service.slug !== slug) {\n          map[category].push(service);\n        } else {\n          setSelectedCategory(category);\n        }\n      }\n      if (service.slug !== slug) {\n        map[\"All Services\"].push(service);\n      }\n    });\n    return map;\n  }, [slug, cfs]);\n\n  const services = useMemo(\n    () =>\n      categoriesedServices[selectedCategory].map((service, index) => (\n        <ServiceCard\n          key={`${service.slug}_${index}`}\n          cf={service}\n          navigate={navigate}\n        />\n      )),\n    [selectedCategory, categoriesedServices, navigate]\n  );\n\n  return (\n    <div className=\"background-grey\">\n      <section className=\"container services-wrapper\">\n        <div className=\"category-wrapper\">\n          {Object.keys(categoriesedServices).map((category, index) => (\n            <SelectorButton\n              key={`${category}_${index}`}\n              variant=\"dark\"\n              onClick={() => setSelectedCategory(category)}\n              isSelected={selectedCategory === category}\n            >\n              {category}\n            </SelectorButton>\n          ))}\n        </div>\n        {services}\n      </section>\n    </div>\n  );\n};\n\nexport default ServicesSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}